runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
print(altitud)
altitud = altitud*exp(1)^(altitud-1000)
print(altitud)
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
print(altitud)
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
data = read.csv("https://raw.githubusercontent.com/SergioMejia2/AnaNum1910/master/Proyecto/datacsv.csv")
sort1.data <- data[order(data$Latitud, data$Altitud, data$Gravedad), ]
gravedad = sort1.data$Gravedad
altitud = sort1.data$Altitud
latitud = sort1.data$Latitud
altitud = altitud*exp(1)^(altitud-1000)
print(altitud)
altitud = sort1.data$Altitud
altitud = altitud*exp(1)^(altitud)
print(altitud)
altitud = altitud*exp(1)^(altitud)/exp(1)^(200)
altitud = sort1.data$Altitud
altitud = altitud*exp(1)^(altitud)/exp(1)^(200)
print(altitud)
a
print(altitud)
altitud = altitud*exp(1)^(altitud)/exp(1)^(100)
print(altitud)
altitud = sort1.data$Altitud
altitud = altitud*exp(1)^(altitud)
print(altitud)
altitud = sort1.data$Altitud
print(altitud)
altitud = altitud*exp(1)^(0.002*(altitud-100))
print(altitud)
altitud = sort1.data$Altitud
altitud = altitud + d
d = 2*(6.371*(10^6))
altitud = altitud + d
print(altitud)
altitud = sort1.data$Altitud
print(altitud)
altitud = sort1.data$Altitud
gravedad = sort1.data$Gravedad
altitud = sort1.data$Altitud
latitud = sort1.data$Latitud
d = 2*(6.371*(10^6))
print(altitud)
altitud = altitud + d
altitud = altitud*exp(1)^(0.001*(altitud-12741500))
print(altitud)
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
runApp('Sergio Andrés/Javeriana/V Semestre/Analisis Numerico/Proyecto/FApp.R')
library(PolynomF)
library(plotly)
library(rgl)
library(rsm)
data = read.csv("https://raw.githubusercontent.com/SergioMejia2/AnaNum1910/master/Proyecto/datacsv.csv")
sort1.data <- data[order(data$Latitud, data$Altitud, data$Gravedad), ]
gravedad = sort1.data$Gravedad
altitud = sort1.data$Altitud
latitud = sort1.data$Latitud
tam = length(gravedad)
z <- lm(gravedad~(poly(latitud,3,raw=TRUE)+poly(altitud,3,raw=TRUE)))#splinefun(1:tam,latitud)
z$coefficients
summary(z)
coef(z)
#pdf(file = "gravity.pdf")
image(z, altitud ~ latitud,d=100,col=rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.85)))
contour(z, altitud ~ latitud)
persp(z, altitud ~ latitud,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=30,phi=30,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=90,phi=0,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad" )#contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=0,phi=0,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
#dev.off()
datosAjustados = data.frame(Lat = latitud, Alt = altitud, Fitted = fitted(z))
GravedadHelmert <- function(x){
result = 0
result = 9.7803267715*(1 + 0.001931851353*sin(x)^2/sqrt(1-0.0066943800229*sin(x)^2))
return (result)
}
gravedadTeorica <- function(x){
gravedadT = c()
i = 1
while(i <= length(x)){
gravedadT[i]=GravedadHelmert(x[i])
i = i+1
}
return(gravedadT)
}
error <- function(exp, teo){
errores = c()
i=1
while(i<=length(exp)){
errores[i] = abs((exp[i]-teo[i])/(teo[i]))*100
i = i+1
}
return(errores)
}
plot3d(datosAjustados$Lat,datosAjustados$Alt,datosAjustados$Fitted)
grav = 0
grav = gravedadTeorica(latitud)
err = 0
err = error(gravedad,grav)
err2 = error(datosAjustados$Fitted,grav)
pdf(file="qqnorms.pdf")
qqnorm(err)
qqline(err)
qqnorm(err2)
qqline(err)
dev.off()
contour(z, altitud ~ latitud, labcex=1.5)
contour(z, altitud ~ latitud, labcex=1)
contour(z, altitud ~ latitud, labcex=0.8)
png(file="img.png",width=800)
image(z, altitud ~ latitud,d=100,col=rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.85)))
contour(z, altitud ~ latitud, labcex=0.8)
persp(z, altitud ~ latitud,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=30,phi=30,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=90,phi=0,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad" )#contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=0,phi=0,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
dev.off()
library(PolynomF)
library(plotly)
library(rgl)
library(rsm)
data = read.csv("https://raw.githubusercontent.com/SergioMejia2/AnaNum1910/master/Proyecto/datacsv.csv")
sort1.data <- data[order(data$Latitud, data$Altitud, data$Gravedad), ]
gravedad = sort1.data$Gravedad
altitud = sort1.data$Altitud
latitud = sort1.data$Latitud
tam = length(gravedad)
z <- lm(gravedad~(poly(latitud,3,raw=TRUE)+poly(altitud,3,raw=TRUE)))#splinefun(1:tam,latitud)
z$coefficients
summary(z)
coef(z)
#pdf(file = "gravity.pdf")
png(file="img.png",width=800)
image(z, altitud ~ latitud,d=100,col=rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.85)))
dev.off()
png(file="img2.png",width=800)
contour(z, altitud ~ latitud, labcex=0.8)
persp(z, altitud ~ latitud,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
dev.off()
png(file="img3.png",width=800)
persp(z, altitud ~ latitud,theta=30,phi=30,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
dev.off()
png(file="img4.png",width=800)
persp(z, altitud ~ latitud,theta=90,phi=0,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad" )#contours = list(z="top", col="blue"))
dev.off()
png(file="img5.png",width=800)
persp(z, altitud ~ latitud,theta=0,phi=0,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
dev.off()
datosAjustados = data.frame(Lat = latitud, Alt = altitud, Fitted = fitted(z))
GravedadHelmert <- function(x){
result = 0
result = 9.7803267715*(1 + 0.001931851353*sin(x)^2/sqrt(1-0.0066943800229*sin(x)^2))
return (result)
}
gravedadTeorica <- function(x){
gravedadT = c()
i = 1
while(i <= length(x)){
gravedadT[i]=GravedadHelmert(x[i])
i = i+1
}
return(gravedadT)
}
error <- function(exp, teo){
errores = c()
i=1
while(i<=length(exp)){
errores[i] = abs((exp[i]-teo[i])/(teo[i]))*100
i = i+1
}
return(errores)
}
plot3d(datosAjustados$Lat,datosAjustados$Alt,datosAjustados$Fitted)
grav = 0
grav = gravedadTeorica(latitud)
err = 0
err = error(gravedad,grav)
err2 = error(datosAjustados$Fitted,grav)
#pdf(file="qqnorms.pdf")
png(file="err1.png",width=800)
qqnorm(err)
qqline(err)
dev.off()
png(file="err2.png",width=800)
qqnorm(err2)
qqline(err)
dev.off()
png(file="cont.png",width=800)
contour(z, altitud ~ latitud, labcex=0.8)
dev.off()
maxim-minim
for(i in 1:(length(gravedad)))
set.seed(417)
rm(list=ls())
library(plotly)
data<-read.csv("https://raw.githubusercontent.com/SergioMejia2/AnaNum1910/master/Proyecto/datacsv.csv")
gravedad =  data$Gravedad
latitud = data$Latitud
longitud = data$Longitud
altitud = data$Altitud
cities = data$Ciudad
d = 2*(6.371*(10^6))
city_info = 0
for(i in 1:length(cities))
{
city_info[i] = paste(cities[i],"\nCoordinates:\nL: ",latitud[i],"\nLo: ",longitud[i],"\nAlt: ",altitud[i])
}
city_info[length(city_info)+1] = "Earth"
altitud = altitud+d
altitud = altitud*1.1
for(i in 1:length(longitud))
{
if(longitud[i] < 0)
{
longitud[i] = longitud[i] + 360
}
}
latitud = -latitud*(pi/180)
longitud = longitud*(pi/180)
print(length(latitud))
print(length(longitud))
print(altitud)
print(longitud)
print(latitud)
xm = altitud*sin(longitud)*cos(latitud)
ym = altitud*sin(longitud)*sin(latitud)
zm = altitud*cos(longitud)
xm[length(xm)+1] = 0
ym[length(ym)+1] = 0
zm[length(zm)+1] = 0
sizes = 0
colors = 0
maxim = max(gravedad)
minim = min(gravedad)
for(i in 1:(length(gravedad)))
{
perc = (gravedad[i]-minim)/(maxim - minim)
print(perc)
sizes[i] = (15-3)*perc + 3
#print(sizes[i])
colors[i] = sizes[i]
}
colors[length(colors)+1] = '#176ABD'
sizes[length(sizes)+1] = d/(60000)
cat(length(sizes), " ", length(cities), length(zm))
plot_ly(x=xm, y=ym, z=zm, type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = TRUE, opacity=1))
maxim-minim
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = TRUE, opacity=1))
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1))
plot_ly(x=xm, y=ym, z=zm, layout(xaxis=NULL,yaxis=NULL,showlegend=FALSE) projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1))
plot_ly(x=xm, y=ym, z=zm, layout(xaxis=NULL,yaxis=NULL,showlegend=FALSE), projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1))
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
plot_ly(x=xm, y=ym, z=zm, layout(xaxis=ax,yaxis=ax,showlegend=FALSE), projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1))
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=ax,yaxis=ax,showlegend=FALSE)
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=ax,yaxis=ax,showlegend=FALSE)
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
p <- plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=ax,yaxis=ax,showlegend=FALSE)
p
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
p <- plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=ax,yaxis=ax)
p
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE,yaxis=list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE)
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE,yaxis=list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE)
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(xaxis=list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE),yaxis=list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE))
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(scene = list(xaxis=ax,yaxis=ax,zaxis=ax))
z$coefficients
library(PolynomF)
library(plotly)
library(rgl)
library(rsm)
data = read.csv("https://raw.githubusercontent.com/SergioMejia2/AnaNum1910/master/Proyecto/datacsv.csv")
sort1.data <- data[order(data$Latitud, data$Altitud, data$Gravedad), ]
gravedad = sort1.data$Gravedad
altitud = sort1.data$Altitud
latitud = sort1.data$Latitud
tam = length(gravedad)
z <- lm(gravedad~(poly(latitud,3,raw=TRUE)+poly(altitud,3,raw=TRUE)))#splinefun(1:tam,latitud)
z$coefficients
summary(z)
coef(z)
persp(z, altitud ~ latitud,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
persp(z, altitud ~ latitud,theta=30,phi=30,col = rev(rainbow(100, s = 1, v = 1, start = 0, end = 0.7))
,zlab="gravedad", contours = list(z="top", col="blue"))
set.seed(417)
rm(list=ls())
library(plotly)
data<-read.csv("https://raw.githubusercontent.com/SergioMejia2/AnaNum1910/master/Proyecto/datacsv.csv")
gravedad =  data$Gravedad
latitud = data$Latitud
longitud = data$Longitud
altitud = data$Altitud
cities = data$Ciudad
d = 2*(6.371*(10^6))
city_info = 0
for(i in 1:length(cities))
{
city_info[i] = paste(cities[i],"\nCoordinates:\nL: ",latitud[i],"\nLo: ",longitud[i],"\nAlt: ",altitud[i])
}
city_info[length(city_info)+1] = "Earth"
altitud = altitud+d
altitud = altitud*1.1
for(i in 1:length(longitud))
{
if(longitud[i] < 0)
{
longitud[i] = longitud[i] + 360
}
}
latitud = -latitud*(pi/180)
longitud = longitud*(pi/180)
print(length(latitud))
print(length(longitud))
print(altitud)
print(longitud)
print(latitud)
xm = altitud*sin(longitud)*cos(latitud)
ym = altitud*sin(longitud)*sin(latitud)
zm = altitud*cos(longitud)
xm[length(xm)+1] = 0
ym[length(ym)+1] = 0
zm[length(zm)+1] = 0
sizes = 0
colors = 0
maxim = max(gravedad)
minim = min(gravedad)
for(i in 1:(length(gravedad)))
{
perc = (gravedad[i]-minim)/(maxim - minim)
print(perc)
sizes[i] = (15-3)*perc + 3
#print(sizes[i])
colors[i] = sizes[i]
}
colors[length(colors)+1] = '#176ABD'
sizes[length(sizes)+1] = d/(60000)
cat(length(sizes), " ", length(cities), length(zm))
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
plot_ly(x=xm, y=ym, z=zm, projection = list(x=list(show=FALSE),y=list(show=FALSE),z=list(show=FALSE)),type="scatter3d", mode="markers", name="Earth",text=city_info,  projection = list(x=(show=FALSE)),hoverinfo='text',
marker = list(size=sizes, sizemin=3, color=colors, colorscale = c('#FFE1A1', '#683531'), showscale = FALSE, opacity=1)) %>% layout(scene = list(xaxis=ax,yaxis=ax,zaxis=ax))
p
maxim
minim
max(latitud)
max(longitud)
gravedad =  data$Gravedad
latitud = data$Latitud
longitud = data$Longitud
max(latitud)
min(longitid)
min(longitud)
min(latitud)
max(latitud)
min(latitud)
max(latitud)
min(altitud)
altitud = data$Altitud
min(altitud)
max(altitud)
